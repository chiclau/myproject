package com.lyht.util;

import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.util.CellRangeAddress;

@SuppressWarnings({ "deprecation", "rawtypes" })
public class ExcelUtils {
	public static String SellerStat2Excel( List data ,HttpServletRequest request ,String ymonth, String [] tabHead ,String sheetTitle,String[] val) {
        // 第一步，创建一个webbook，对应一个Excel文件
        HSSFWorkbook wb = new HSSFWorkbook();
        // 第二步，在webbook中添加一个sheet,对应Excel文件中的sheet
        HSSFSheet sheet = wb.createSheet(sheetTitle);
        // 第三步，在sheet中添加表头第0行,注意老版本poi对Excel的行数列数有限制short
        HSSFRow row = sheet.createRow((int) 0);
        sheet.setDefaultColumnWidth((short) 15); 
        // 第四步，创建单元格，并设置值表头 设置表头居中s
        HSSFCellStyle style = wb.createCellStyle();
        style.setAlignment(HSSFCellStyle.ALIGN_CENTER); // 创建一个居中格式
        HSSFCell cell = null;
        int index = 1;
        for (String str : tabHead) {
			if(cell == null) {
				cell = row.createCell((short) 0);
				cell.setCellValue(str);
		        cell.setCellStyle(style);
			}else{
				cell = row.createCell((short) index);
				cell.setCellValue(str);
		        cell.setCellStyle(style);
		        index ++;
			}
		}
        style.setLocked(true);
        
        int i = 0;
        try {
        	for (Object obj : data) {
        		Map map = null;
        		if(obj instanceof Map){
        			map = (Map)obj;
        		}
                row = sheet.createRow((int) i + 1);
                int num = 1;
                row.createCell((short) 0).setCellValue(i+1);
                // 第四步，创建单元格，并设置值
                for (String str : val) {
                	Object object=map.get(str);
                	if(null==object){
                		row.createCell((short) num).setCellValue("");
                	}else{
                		row.createCell((short) num).setCellValue(object.toString());
                	}
	                num++;
                }
                i++;
        	}
        } catch (Exception e) {
            e.printStackTrace();
        }
        String realPath = request.getSession().getServletContext().getRealPath("/");
        // 第六步，将文件存到指定位置
        String path = realPath+ymonth+"_"+sheetTitle+".xls";
        try {
        	FileOutputStream  fout = new FileOutputStream(path);
            wb.write(fout);
            fout.flush();
            fout.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ymonth+"_"+sheetTitle+".xls";
    }
	/**
	 * 产流计算导出到excel，跨行跨列
	 * @param data
	 * @param request
	 * @param ymonth
	 * @param tabHead
	 * @param sheetTitle
	 * @param val
	 * @return
	 */
	public static String exportChanLiuExcel( List data , Object[] nStrings, String[] qzArr,HttpServletRequest request ,String ymonth, String [] tabHead ,String sheetTitle,String[] val) {
        // 第一步，创建一个webbook，对应一个Excel文件
        HSSFWorkbook wb = new HSSFWorkbook();
        // 第二步，在webbook中添加一个sheet,对应Excel文件中的sheet
        HSSFSheet sheet = wb.createSheet(sheetTitle);
        // 第三步，在sheet中添加表头第0行,注意老版本poi对Excel的行数列数有限制short
        sheet.addMergedRegion(new CellRangeAddress(0,1,0,0));//合并序号
        sheet.addMergedRegion(new CellRangeAddress(0,1,1,1));//合并时间
        HSSFRow row = sheet.createRow((int) 0);
        HSSFCellStyle style = wb.createCellStyle();
        HSSFCellStyle style2 = wb.createCellStyle();
        sheet.setDefaultColumnWidth(10); 
        sheet.setColumnWidth(1, 20*256);
        style.setAlignment(HSSFCellStyle.ALIGN_CENTER); // 创建一个居中格式
        
        HSSFCell  cell= null;
        cell=row.createCell(0);
        cell.setCellValue("序号");
        cell.setCellStyle(style);
        cell=row.createCell(1);
        cell.setCellValue("日期");
        cell.setCellStyle(style);
        sheet.addMergedRegion(new CellRangeAddress(0,1,2+qzArr.length*2,2+qzArr.length*2));//合并最后一列
        for(int i=0;i<qzArr.length;i++) {
        	  sheet.addMergedRegion(new CellRangeAddress(0,0,2+2*i,3+2*i));//合并中间的测站，权重
        		 cell=row.createCell(2+2*i);
                 cell.setCellValue((String)nStrings[i]);
                 cell.setCellStyle(style);
        }
      	cell=row.createCell(2+qzArr.length*2);
        cell.setCellValue("雨面量");
        cell.setCellStyle(style);
       
        row = sheet.createRow((int)  1);
        HSSFCell  cell1= null;
        for(int i=0;i<qzArr.length;i++) {
        	cell1=row.createCell(2+2*i);
        	cell1.setCellValue("权重");
        	cell1=row.createCell(3+2*i);
        	cell1.setCellValue((String)qzArr[i]);
        }

        style.setLocked(true);
        int i = 0;
        try {
         	List ymllist=new ArrayList();
       	for (Object obj : data) {
        		Map map = null;
        		if(obj instanceof Map){
        			map = (Map)obj;
        		}
               row = sheet.createRow((int) i + 2);
                int num = 1;
                row.createCell( 0).setCellValue(i+1);
                // 第四步，创建单元格，并设置值
                for (String str : val) {
                	Object object=map.get(str);
                	if(str.equals("YML")) {
                	
                		  row.createCell(2+qzArr.length*2).setCellValue(Double.parseDouble(object.toString()));
                	}
                	if(str.equals("JYL")) {
                		String[]arr=object.toString().split(",");
                		for(int j=0;j<arr.length;j++) {
                			 row.createCell(2+j*2).setCellValue(Double.parseDouble(arr[j]));
                			  sheet.addMergedRegion(new CellRangeAddress(2+i,2+i,2+2*j,3+2*j));
                		}
                	}else {
                		if(null==object){
                    		row.createCell(num).setCellValue("");
                    	}else{
                    		row.createCell(num).setCellValue(object.toString());
                    	}
                	}
	                num++;
                }
                i++;
              
        	}
        } catch (Exception e) {
            e.printStackTrace();
        }
        String realPath = request.getSession().getServletContext().getRealPath("/");
        // 第六步，将文件存到指定位置
        String path = realPath+ymonth+""+sheetTitle+".xls";
        try {
        	FileOutputStream  fout = new FileOutputStream(path);
            wb.write(fout);
            fout.flush();
            fout.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ymonth+""+sheetTitle+".xls";
    }
	
	
	public static String exportChanLiuExcel5( List data , Object[] nStrings, String[] qzArr,HttpServletRequest request ,String ymonth, String [] tabHead ,String sheetTitle,String[] val) {
        // 第一步，创建一个webbook，对应一个Excel文件
        HSSFWorkbook wb = new HSSFWorkbook();
        // 第二步，在webbook中添加一个sheet,对应Excel文件中的sheet
        HSSFSheet sheet = wb.createSheet(sheetTitle);
        // 第三步，在sheet中添加表头第0行,注意老版本poi对Excel的行数列数有限制short
        sheet.addMergedRegion(new CellRangeAddress(0,1,0,0));//合并序号
        sheet.addMergedRegion(new CellRangeAddress(0,1,1,1));//合并时间
        HSSFRow row = sheet.createRow((int) 0);
        HSSFCellStyle style = wb.createCellStyle();
        HSSFCellStyle style2 = wb.createCellStyle();
        sheet.setDefaultColumnWidth(10); 
        sheet.setColumnWidth(1, 20*256);
        style.setAlignment(HSSFCellStyle.ALIGN_CENTER); // 创建一个居中格式
        
        HSSFCell  cell= null;
        cell=row.createCell(0);
        cell.setCellValue("序号");
        cell.setCellStyle(style);
        cell=row.createCell(1);
        cell.setCellValue("日期");
        cell.setCellStyle(style);
        sheet.addMergedRegion(new CellRangeAddress(0,1,2+qzArr.length*2,2+qzArr.length*2));//合并
        sheet.addMergedRegion(new CellRangeAddress(0,1,3+qzArr.length*2,3+qzArr.length*2));//
        sheet.addMergedRegion(new CellRangeAddress(0,1,4+qzArr.length*2,4+qzArr.length*2));//
        for(int i=0;i<qzArr.length;i++) {
        	  sheet.addMergedRegion(new CellRangeAddress(0,0,2+2*i,3+2*i));//合并中间的测站，权重
        		 cell=row.createCell(2+2*i);
                 cell.setCellValue((String)nStrings[i]);
                 cell.setCellStyle(style);
        }
      	cell=row.createCell(2+qzArr.length*2);
        cell.setCellValue("雨面量");
        cell.setCellStyle(style);
    	cell=row.createCell(3+qzArr.length*2);
        cell.setCellValue("Em");
        cell.setCellStyle(style);
        cell=row.createCell(4+qzArr.length*2);
        cell.setCellValue("Pa");
        cell.setCellStyle(style);
       
        row = sheet.createRow((int)  1);
        HSSFCell  cell1= null;
        for(int i=0;i<qzArr.length;i++) {
        	cell1=row.createCell(2+2*i);
        	cell1.setCellValue("权重");
        	cell1=row.createCell(3+2*i);
        	cell1.setCellValue((String)qzArr[i]);
        }

        style.setLocked(true);
        int i = 0;
        try {
         	List ymllist=new ArrayList();
       	for (Object obj : data) {
        		Map map = null;
        		if(obj instanceof Map){
        			map = (Map)obj;
        		}
               row = sheet.createRow((int) i + 2);
                int num = 1;
                row.createCell( 0).setCellValue(i+1);
                // 第四步，创建单元格，并设置值
                for (String str : val) {
                	Object object=map.get(str);
                	if(str.equals("YML")) {
                		  row.createCell(2+qzArr.length*2).setCellValue(Double.parseDouble(object.toString()));
                	}
                	if(str.equals("EM")) {
              		  row.createCell(3+qzArr.length*2).setCellValue(Double.parseDouble(object.toString()));
              	}
                	if(str.equals("PA")) {
              		  row.createCell(4+qzArr.length*2).setCellValue(Double.parseDouble(object.toString()));
              	}
                	if(str.equals("JYL")) {
                		String[]arr=object.toString().split(",");
                		for(int j=0;j<arr.length;j++) {
               			 row.createCell(2+j*2).setCellValue(Double.parseDouble(arr[j]));
               			 sheet.addMergedRegion(new CellRangeAddress(2+i,2+i,2+2*j,3+2*j));
                		}
                	}else {
                		if(null==object){
                    		row.createCell(num).setCellValue("");
                    	}else{
                    		row.createCell(num).setCellValue(object.toString());
                    	}
                	}
	                num++;
                }
                i++;
              
        	}
        } catch (Exception e) {
            e.printStackTrace();
        }
        String realPath = request.getSession().getServletContext().getRealPath("/");
        // 第六步，将文件存到指定位置
        String path = realPath+ymonth+""+sheetTitle+".xls";
        try {
        	FileOutputStream  fout = new FileOutputStream(path);
            wb.write(fout);
            fout.flush();
            fout.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ymonth+""+sheetTitle+".xls";
    }

}
