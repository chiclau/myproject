package com.lyht.business.system.dao;

import java.util.List;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Repository;

import com.lyht.base.hibernate.basedao.HibernateBaseDao;
import com.lyht.base.hibernate.common.PageResults;
import com.lyht.business.system.bean.SysStaff;
import com.lyht.business.system.bean.SysUser;
import com.lyht.business.system.formbean.SysStaffFormBean;
import com.lyht.util.CommonUtil;

@Repository
@Scope("prototype")
@SuppressWarnings("rawtypes")
public class SysStaffDao extends HibernateBaseDao<SysStaff>{
	
	/**
	 * 获取人员信息列表
	 * */
	public PageResults getSysStaffListData(SysStaffFormBean mSysStaffFormBean){
		StringBuilder sql=new StringBuilder();
		String str=spliceStrSysStaff(mSysStaffFormBean);
		sql.append("SELECT STAFF_CODE,STAFF_NAME,TREENM_DEPT,STAFF_DEPT,LINK_PHONE,JIG,");
		sql.append("STAFF_ADDRESS,STATE FROM SYS_STAFF WHERE 1=1 ");
		if(null!=str && !"".equals(str)){
			sql.append(str);
		}
		sql.append(" ORDER BY STAFF_CODE");
		int pageNo=mSysStaffFormBean.getPageBean().getLimit()>0?mSysStaffFormBean.getPageBean().getOffset()/mSysStaffFormBean.getPageBean().getLimit():0;
		pageNo=pageNo+1;
		mSysStaffFormBean.getPageBean().setPageNo(pageNo);
		return this.findPageByFetchedSql(sql.toString(), null
				,mSysStaffFormBean.getPageBean().getPageNo()
				,mSysStaffFormBean.getPageBean().getLimit()
				,null);
	}

	public int deleteSysStaffByUsercodes(String userCodes){
		StringBuffer sql = new StringBuffer("delete from sys_staff where staff_code in (select staff_code from sys_user where user_code in ("+userCodes+"))");
		return this.excuteSql(sql.toString(), new Object[]{});
	}
	/**
	 * 新增人员信息
	 * */
	public boolean insertSysStaffInfo(SysStaff mSysStaff,String staffCode,SysUser mSysUser){
		StringBuilder sql=new StringBuilder();
		sql.append("INSERT INTO SYS_STAFF (STAFF_CODE,STAFF_NAME,TREENM_DEPT,STAFF_DEPT,LINK_PHONE,JIG,STAFF_ADDRESS,STATE)");
		sql.append(" VALUES ('"+staffCode+"','"+mSysStaff.getStaffName()+"','"+mSysStaff.getTreeNmDept()+"',");
		sql.append("'"+mSysStaff.getStaffDept()+"','"+mSysStaff.getLinkPhone()+"',");
		sql.append("'"+mSysStaff.getJig()+"','"+mSysStaff.getStaffAddress()+"',");
		if(null==mSysUser){
			sql.append("1)");
		}else{
			sql.append("1)");
		}
		return isFlag(sql);
	}
	
	/**
	 * 新增人员信息
	 * */
	public boolean insertSysStaffInfo(SysStaff mSysStaff,String staffCode){
		StringBuilder sql=new StringBuilder();
		sql.append("INSERT INTO SYS_STAFF (STAFF_CODE,STAFF_NAME,TREENM_DEPT,STAFF_DEPT,LINK_PHONE,JIG,STAFF_ADDRESS,STATE)");
		sql.append(" VALUES ('"+staffCode+"','"+mSysStaff.getStaffName()+"','"+mSysStaff.getTreeNmDept()+"',");
		sql.append("'"+mSysStaff.getStaffDept()+"','"+mSysStaff.getLinkPhone()+"',");
		sql.append("'"+mSysStaff.getJig()+"','"+mSysStaff.getStaffAddress()+"',1)");
		return isFlag(sql);
	}
	
	/**
	 * 修改人员信息
	 * */
	public boolean updateSysStaffInfo(SysStaff mSysStaff){
		StringBuilder sql=new StringBuilder();
		sql.append("UPDATE SYS_STAFF SET STAFF_CODE='"+mSysStaff.getStaffCode()+"',STAFF_NAME='"+mSysStaff.getStaffName()+"',");
		sql.append("TREENM_DEPT='"+mSysStaff.getTreeNmDept()+"',STAFF_DEPT='"+mSysStaff.getStaffDept()+"',");
		sql.append("LINK_PHONE='"+mSysStaff.getLinkPhone()+"',JIG='"+mSysStaff.getJig()+"',STAFF_ADDRESS='"+mSysStaff.getStaffAddress()+"',");
		sql.append("STATE='"+mSysStaff.getState()+"' WHERE STAFF_CODE='"+mSysStaff.getStaffCode()+"'");
		return isFlag(sql);
	}
	
	/**
	 * 删除人员信息
	 * */
	public boolean deleteSysStaffInfo(String staffCode){
		StringBuilder sql=new StringBuilder();
		sql.append("DELETE FROM SYS_STAFF WHERE STAFF_CODE IN ('"+staffCode+"')");
		return isFlag(sql);
	}
	
	/**
	 * 审核人员信息
	 * */
	public boolean auditSysStaffInfo(SysUser mSysUser){
		StringBuilder sql=new StringBuilder();
		sql.append("UPDATE SYS_STAFF SET STATE='"+mSysUser.getState()+"' ");
		sql.append("WHERE STAFF_CODE IN ('"+mSysUser.getStaffCode()+"')");
		return isFlag(sql);
	}
	
	/**
	 * 验证sql是否执行成功
	 * */
	private boolean isFlag(StringBuilder sql){
		boolean flag=false;
		int i=this.exectueSQL(sql.toString());
		if(i>0){
			flag=true;
		}
		return flag;
	}
	
	/**
	 * 根据人员编号获取人员信息
	 * */
	@SuppressWarnings("unchecked")
	public SysStaff getStaffInfoByStaffCode(String staffCode){
		 SysStaff mSysStaff=new SysStaff();
		 StringBuilder sql=new StringBuilder();
		 sql.append("SELECT STAFF_CODE,STAFF_NAME,TREENM_DEPT,STAFF_DEPT,LINK_PHONE,");
		 sql.append("JIG,STAFF_ADDRESS,STATE FROM SYS_STAFF WHERE STAFF_CODE='"+staffCode+"'");
		 sql.append(" AND STATE=1");
		 List<SysStaff> mSysStaffList=null;
		 try{
			 mSysStaffList=this.getSession().createSQLQuery(sql.toString()).addEntity(SysStaff.class).list();
		     if(mSysStaffList.size()>0){
		    	 mSysStaff=mSysStaffList.get(0);
		     }
		 }catch (Exception e) {
			e.getStackTrace();
		 }
		 return mSysStaff;
	}
	
	/**
	 * 根据条件查询人员信息
	 * */
	private String spliceStrSysStaff(SysStaffFormBean mSysStaffFormBean){
		StringBuilder sql=new StringBuilder();
		if(null!=mSysStaffFormBean){
			if(CommonUtil.trim(mSysStaffFormBean.getSearchName()).length()>0){
				sql.append("AND ((STAFF_CODE LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getSearchName())+"%') ");
				sql.append("OR (STAFF_NAME LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getSearchName())+"%') ");
				sql.append("OR (TREENM_DEPT LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getSearchName())+"%') ");
				sql.append("OR (STAFF_DEPT LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getSearchName())+"%') ");
				sql.append("OR (LINK_PHONE LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getSearchName())+"%') ");
				sql.append("OR (JIG LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getSearchName())+"%') ");
				sql.append("OR (STAFF_ADDRESS LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getSearchName())+"%') ");
				sql.append("OR (STATE = '"+CommonUtil.trim(mSysStaffFormBean.getSearchName())+"')) ");
			}
			if(null!=mSysStaffFormBean.getmSysStaffInfoBean()){
				if(CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getStaffCode()).length()>0){
					sql.append(" AND STAFF_CODE LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getStaffCode())+"%'");
				}
				if(CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getStaffName()).length()>0){
					sql.append(" AND STAFF_NAME LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getStaffName())+"%'");
				}
				if(CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getTreeNmDept()).length()>0){
					sql.append(" AND TREENM_DEPT LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getTreeNmDept())+"%'");
				}
				if(CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getStaffDept()).length()>0){
					sql.append(" AND STAFF_DEPT LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getStaffDept())+"%'");
				}
				if(CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getLinkPhone()).length()>0){
					sql.append(" AND LINK_PHONE LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getLinkPhone())+"%'");
				}
				if(CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getJig()).length()>0){
					sql.append(" AND JIG LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getJig())+"%'");
				}
				if(CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getStaffAddress()).length()>0){
					sql.append(" AND STAFF_ADDRESS LIKE '%"+CommonUtil.trim(mSysStaffFormBean.getmSysStaffInfoBean().getStaffAddress())+"%'");
				}
			}
		}
		return sql.toString();
	}
	
	/**
	 * 根据账号名称查询是否存在账户信息
	 * */
	public PageResults getSysStaffInfoByUserName(SysStaff mSysStaff){
		StringBuilder sql=new StringBuilder();
		sql.append("SELECT STAFF_CODE,STAFF_NAME,TREENM_DEPT,STAFF_DEPT,LINK_PHONE,");
		 sql.append("JIG,STAFF_ADDRESS,STATE FROM SYS_STAFF WHERE STAFF_NAME='"+mSysStaff.getStaffName()+"'");
		return this.findPageByFetchedSql(sql.toString(), null, 0, 100000000, null);
	}
}
