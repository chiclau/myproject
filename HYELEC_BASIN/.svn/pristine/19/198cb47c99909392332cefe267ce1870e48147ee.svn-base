package com.lyht.business.consumer.hydrologicalData.dao;

import java.util.List;
import java.util.Random;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Repository;

import com.lyht.base.hibernate.basedao.HibernateBaseDao;
import com.lyht.base.hibernate.common.PageResults;
import com.lyht.business.consumer.hydrologicalData.bean.Soil;
import com.lyht.business.consumer.hydrologicalData.formbean.SoilFormBean;
import com.lyht.util.CommonUtil;
import com.lyht.util.DateUtil;
import com.lyht.util.DesUtils;
import com.lyht.util.Randomizer;

@Repository
@Scope("prototype")
@SuppressWarnings("rawtypes")
public class SoilDao extends HibernateBaseDao<Soil>{

	/**
	 * 获取列表数据
	 * */
	public PageResults getSoilListData(SoilFormBean mSoilFormBean){
		StringBuilder sql=new StringBuilder();
		sql.append("SELECT soil.STCD AS STCD,"
				+ "soil.TM AS TM,soil.EXKEY AS EXKEY,"
				+ "soil.VTAVSLM AS VTAVSLM,"
				+ "soil.SRLSLM AS SRLSLM,soil.SLM10 AS SLM10,");
		sql.append(" soil.SLM20 AS SLM20,soil.SLM30 AS SLM30,"
				+ "soil.SLM40 AS SLM40,soil.SLM50 AS SLM50,");
		sql.append(" soil.SLM60 AS SLM60,soil.CRPTY AS CRPTY,"
				+ "soil.CRPGRWPRD AS CRPGRWPRD,soil.HITRSN AS HITRSN,"
				+ "soil.HITEXT AS HITEXT,soil.SLTP AS SLTP,");
		sql.append(" soil.SLPQ AS SLPQ,soil.DRSLD AS DRSLD,"
				+ "soil.IRRINTV AS IRRINTV,soil.PINTV AS PINTV,"
				+ "soil.SLMMMT AS SLMMMT,b.STNM AS STNM ");
		sql.append(" FROM ST_SOIL_R AS soil ");
		sql.append(" LEFT JOIN ST_STBPRP_B AS b ON b.STCD = soil.STCD WHERE 1=1 ");
		if(mSoilFormBean.getSearchName() != null && !"".equals(mSoilFormBean.getSearchName().trim())){
			sql.append(" and b.STNM LIKE '%" + mSoilFormBean.getSearchName().trim() + "%'  ");
			String searchName = mSoilFormBean.getSearchName();
			if(searchName.contains("白地")){
				sql.append(" or CRPTY = '"+ 0 +"'  ");
			}
			if(searchName.contains("小麦")){
				sql.append(" or CRPTY = '"+ 1 +"'  ");
			}
			if(searchName.contains("水稻")){
				sql.append(" or CRPTY = '"+ 2 +"'  ");
			}
			if(searchName.contains("春播杂粮")){
				sql.append(" or CRPTY = '"+ 3 +"'  ");
			}
			if(searchName.contains("夏播杂粮")){
				sql.append(" or CRPTY = '"+ 4 +"'  ");
			}
			if(searchName.contains("薯类")){
				sql.append(" or CRPTY = '"+ 5 +"'  ");
			}
			if(searchName.contains("棉花")){
				sql.append(" or CRPTY = '"+ 6 +"'  ");
			}
			if(searchName.contains("油菜")){
				sql.append(" or CRPTY = '"+ 7 +"'  ");
			}
			if(searchName.contains("甘蔗")){
				sql.append(" or CRPTY = '"+ 8 +"'  ");
			}
			if(searchName.contains("其他作物")){
				sql.append(" or CRPTY = '"+ 9 +"'  ");
			}
			
			if(searchName.contains("烘干法")){
				sql.append(" or SLMMMT = '"+ 1 +"'  ");
			}
			if(searchName.contains("中子水分仪法")){
				sql.append(" or SLMMMT = '"+ 2 +"'  ");
			}
			if(searchName.contains("时域反射法")){
				sql.append(" or SLMMMT = '"+ 3 +"'  ");
			}
			if(searchName.contains("张力计法")){
				sql.append(" or SLMMMT = '"+ 4 +"'  ");
			}
			if(searchName.contains("频域法")){
				sql.append(" or SLMMMT = '"+ 5 +"'  ");
			}
			if(searchName.contains("其它方法")){
				sql.append(" or SLMMMT = '"+ 9 +"'  ");
			}
			if(searchName.contains("其他")){
				sql.append(" or SLTP = '"+ 0 +"'  ");
			}
			if(searchName.contains("沙土")){
				sql.append(" or SLTP = '"+ 1 +"'  ");
			}
			if(searchName.contains("壤土")){
				sql.append(" or SLTP = '"+ 2 +"'  ");
			}
			if(searchName.contains("粘土")){
				sql.append(" or SLTP = '"+ 3 +"'  ");
			}
			if(searchName.contains("壤砂土")){
				sql.append(" or SLTP = '"+ 4 +"'  ");
			}
			if(searchName.contains("粘壤土")){
				sql.append(" or SLTP = '"+ 5 +"'  ");
			}
		}
		//根据测站查询
		if(mSoilFormBean.getStcd() != null && !"".equals(mSoilFormBean.getStcd().trim())){
			sql.append(" and  b.STCD='"+mSoilFormBean.getStcd()+" '");
		}
		//添加开始查询时间
		if(CommonUtil.getLength(CommonUtil.trim(mSoilFormBean.getStartTime())) > 0){
			sql.append(" and soil.TM >= '" + mSoilFormBean.getStartTime() + "'  ");
		}
		//添加结束查询时间
		if(CommonUtil.getLength(CommonUtil.trim(mSoilFormBean.getEndTime())) > 0){
			sql.append(" and soil.TM <= '" + mSoilFormBean.getEndTime() + "'  ");
		}
		sql.append(" ORDER BY soil.STCD,soil.TM");
		int pageNo=mSoilFormBean.getPageBean().getLimit()>0?mSoilFormBean.getPageBean().getOffset()/mSoilFormBean.getPageBean().getLimit():0;
		pageNo=pageNo+1;
		mSoilFormBean.getPageBean().setPageNo(pageNo);
		return this.findPageByFetchedSql(sql.toString(), null
				,mSoilFormBean.getPageBean().getPageNo()
				,mSoilFormBean.getPageBean().getLimit()
				,null);
	}
	/**
	 * 获取列表数据用于导出
	 * */
	public PageResults getSoilListData_export(SoilFormBean mSoilFormBean){
		StringBuilder sql=new StringBuilder();
		String str=spliceStrSoil(mSoilFormBean);
		sql.append(" SELECT a.STCD,a.TM,a.VTAVSLM,a.SLM10,a.SLM20,a.SLM30,a.SLM40,a.SLM50,a.SLM60,b.STNM,a.DRSLD,a.IRRINTV,a.PINTV, ");
		sql.append(" CASE WHEN a.CRPTY = '0' THEN '白地' WHEN a.CRPTY = '1' THEN '小麦' WHEN a.CRPTY = '2' THEN '水稻' WHEN a.CRPTY = '3' THEN '春播杂粮' ");
		sql.append(" WHEN a.CRPTY = '4' THEN '夏播杂粮' WHEN a.CRPTY = '5' THEN '薯类' WHEN a.CRPTY = '6' THEN '棉花' WHEN a.CRPTY = '7' THEN '油菜' ");
		sql.append(" WHEN a.CRPTY = '8' THEN '甘蔗' WHEN a.CRPTY = '9' THEN '其它作物' END AS CRPTY, ");
		sql.append(" CASE WHEN a.CRPGRWPRD = '0' THEN '白地' WHEN a.CRPGRWPRD = '1' THEN '播种期' WHEN a.CRPGRWPRD = '2' THEN '幼苗期' ");
		sql.append(" WHEN a.CRPGRWPRD = '3' THEN '成长期' WHEN a.CRPGRWPRD = '4' THEN '开花结果期' WHEN a.CRPGRWPRD = '5' THEN '黄熟收割期' END AS CRPGRWPRD, ");
		sql.append(" CASE WHEN a.HITRSN = '0' THEN '生长正常' WHEN a.HITRSN = '1' THEN '干旱' WHEN a.HITRSN = '2' THEN '洪涝' WHEN a.HITRSN = '3' THEN '大风' ");
		sql.append(" WHEN a.HITRSN = '4' THEN '霜冻' WHEN a.HITRSN = '5' THEN '冰雹' WHEN a.HITRSN = '6' THEN '其它' END AS HITRSN, ");
		sql.append(" CASE WHEN a.HITEXT = '0' THEN '未受灾' WHEN a.HITEXT = '1' THEN '轻度受灾' WHEN a.HITEXT = '2' THEN '中度受灾'  ");
		sql.append(" WHEN a.HITEXT = '3' THEN '严重受灾' WHEN a.HITEXT = '4' THEN '绝收' END AS HITEXT, ");
		sql.append(" CASE WHEN a.SLTP = '0' THEN '其他' WHEN a.SLTP = '1' THEN '沙土' WHEN a.SLTP = '2' THEN '壤土' WHEN a.SLTP = '3' THEN '粘土' ");
		sql.append(" WHEN a.SLTP = '4' THEN '壤砂土' WHEN a.SLTP = '5' THEN '砂壤土' WHEN a.SLTP = '6' THEN '粘壤土' END AS SLTP, ");
		sql.append(" CASE WHEN a.SLPQ = '11' THEN '粗砂土' WHEN a.SLPQ = '12' THEN '细砂土' WHEN a.SLPQ = '13' THEN '面砂土' WHEN a.SLPQ = '21' THEN '砂粉土' ");
		sql.append(" WHEN a.SLPQ = '22' THEN '粉土' WHEN a.SLPQ = '23' THEN '粉壤土' WHEN a.SLPQ = '24' THEN '黏壤土' WHEN a.SLPQ = '25' THEN '砂黏土' ");
		sql.append(" WHEN a.SLPQ = '31' THEN '粉黏土' WHEN a.SLPQ = '32' THEN '壤黏土' WHEN a.SLPQ = '33' THEN '黏土' END AS SLPQ, ");
		sql.append(" CASE WHEN a.SLMMMT = '1' THEN '烘干法' WHEN a.SLMMMT = '2' THEN '中子水分仪法' WHEN a.SLMMMT = '3' THEN '时域反射法' ");
		sql.append(" WHEN a.SLMMMT = '4' THEN '张力计法' WHEN a.SLMMMT = '5' THEN '频域法' WHEN a.SLMMMT = '9' THEN '其它方法' END AS SLMMMT ");
		sql.append(" FROM ST_SOIL_R a LEFT JOIN ST_STBPRP_B b ON a.STCD = b.STCD WHERE 1=1 ");
		if(mSoilFormBean.getSearchName() != null && !"".equals(mSoilFormBean.getSearchName().trim())){
			sql.append(" and b.STNM LIKE '%" + mSoilFormBean.getSearchName().trim() + "%'  ");
			String searchName = mSoilFormBean.getSearchName();
			if(searchName.contains("白地")){
				sql.append(" or a.CRPTY = '"+ 0 +"'  ");
			}
			if(searchName.contains("小麦")){
				sql.append(" or a.CRPTY = '"+ 1 +"'  ");
			}
			if(searchName.contains("水稻")){
				sql.append(" or a.CRPTY = '"+ 2 +"'  ");
			}
			if(searchName.contains("春播杂粮")){
				sql.append(" or a.CRPTY = '"+ 3 +"'  ");
			}
			if(searchName.contains("夏播杂粮")){
				sql.append(" or a.CRPTY = '"+ 4 +"'  ");
			}
			if(searchName.contains("薯类")){
				sql.append(" or a.CRPTY = '"+ 5 +"'  ");
			}
			if(searchName.contains("棉花")){
				sql.append(" or a.CRPTY = '"+ 6 +"'  ");
			}
			if(searchName.contains("油菜")){
				sql.append(" or a.CRPTY = '"+ 7 +"'  ");
			}
			if(searchName.contains("甘蔗")){
				sql.append(" or a.CRPTY = '"+ 8 +"'  ");
			}
			if(searchName.contains("其他作物")){
				sql.append(" or a.CRPTY = '"+ 9 +"'  ");
			}
			
			if(searchName.contains("烘干法")){
				sql.append(" or a.SLMMMT = '"+ 1 +"'  ");
			}
			if(searchName.contains("中子水分仪法")){
				sql.append(" or a.SLMMMT = '"+ 2 +"'  ");
			}
			if(searchName.contains("时域反射法")){
				sql.append(" or a.SLMMMT = '"+ 3 +"'  ");
			}
			if(searchName.contains("张力计法")){
				sql.append(" or a.SLMMMT = '"+ 4 +"'  ");
			}
			if(searchName.contains("频域法")){
				sql.append(" or a.SLMMMT = '"+ 5 +"'  ");
			}
			if(searchName.contains("其它方法")){
				sql.append(" or a.SLMMMT = '"+ 9 +"'  ");
			}
			if(searchName.contains("其他")){
				sql.append(" or a.SLTP = '"+ 0 +"'  ");
			}
			if(searchName.contains("沙土")){
				sql.append(" or a.SLTP = '"+ 1 +"'  ");
			}
			if(searchName.contains("壤土")){
				sql.append(" or a.SLTP = '"+ 2 +"'  ");
			}
			if(searchName.contains("粘土")){
				sql.append(" or a.SLTP = '"+ 3 +"'  ");
			}
			if(searchName.contains("壤砂土")){
				sql.append(" or a.SLTP = '"+ 4 +"'  ");
			}
			if(searchName.contains("粘壤土")){
				sql.append(" or a.SLTP = '"+ 5 +"'  ");
			}
		}
		//根据测站查询
		if(mSoilFormBean.getStcd() != null && !"".equals(mSoilFormBean.getStcd().trim())){
			sql.append(" and  a.STCD='"+mSoilFormBean.getStcd()+" '");
		}
		//添加开始查询时间
		if(CommonUtil.getLength(CommonUtil.trim(mSoilFormBean.getStartTime())) > 0){
			sql.append(" and a.TM >= '" + mSoilFormBean.getStartTime() + "'  ");
		}
		//添加结束查询时间
		if(CommonUtil.getLength(CommonUtil.trim(mSoilFormBean.getEndTime())) > 0){
			sql.append(" and a.TM <= '" + mSoilFormBean.getEndTime() + "'  ");
		}
		sql.append(" ORDER BY STCD");
		int pageNo=mSoilFormBean.getPageBean().getLimit()>0?mSoilFormBean.getPageBean().getOffset()/mSoilFormBean.getPageBean().getLimit():0;
		pageNo=pageNo+1;
		mSoilFormBean.getPageBean().setPageNo(pageNo);
		return this.findPageByFetchedSql(sql.toString(), null
				,mSoilFormBean.getPageBean().getPageNo()
				,mSoilFormBean.getPageBean().getLimit()
				,null);
	}
	
	/**
	 * 根据主键ID获取实体
	 * */
	public PageResults getSoilInfoListByIds(String ids){
		StringBuilder sql=new StringBuilder();
		sql.append("SELECT STCD,TM,EXKEY,VTAVSLM,SRLSLM,SLM10,SLM20,SLM30,SLM40,SLM50,"
				+ "SLM60,CRPTY,CRPGRWPRD,HITRSN,HITEXT,SLTP,SLPQ,DRSLD,IRRINTV,PINTV,SLMMMT FROM ST_SOIL_R WHERE 1=1 ");
		if(ids.length()>0){
			sql.append(" AND STCD IN ('"+ids+"')");
		}
		sql.append(" ORDER BY STCD");
		return this.findPageByFetchedSql(sql.toString(), null, 0, 100000000, null);
	}
	
	/**
	 * 根据主键ID删除实体
	 * */
	public void deletSoilInfoByIds(String ids,String ids_,String _ids){
		StringBuilder sql=new StringBuilder();
		sql.append("DELETE FROM ST_SOIL_R WHERE STCD = '"+ids+"' AND TM='"+ids_+"' AND EXKEY='"+_ids+"'");
		this.exectueSQL(sql.toString());
	}
	
	/**
	 * 增加实体对象
	 * */
	public void saveSoilInfo(Soil mSoil){
		String sql=execQL(mSoil); //执行sql语句操作
		this.exectueSQL(sql);
	}
	
	/**
	 * 修改实体对象
	 * */
	public void updateSoilInfo(Soil mSoil){
		String sql = updateById(mSoil);//执行sql语句操作
		this.exectueSQL(sql);
	}
	
	/**
	 * 根据主键ID获取实体
	 * */
	@SuppressWarnings("unchecked")
	public Soil getSoilInfoById(SoilFormBean mSoilFormBean){
		Soil mSoil=new Soil();
		String sql=execById(mSoilFormBean);//执行sql语句操作
		List<Soil> mSoilList=null;
		try{
			mSoilList=this.getSession().createSQLQuery(sql.toString()).addEntity(Soil.class).list();
			for(int i=0;i<mSoilList.size();i++){
				mSoil=mSoilList.get(0);
			}
		}catch (Exception e) {
			e.getStackTrace();
		}
		return mSoil;
	}
	
	
	/**
	 * 根据条件查询代码
	 * */
	private String spliceStrSoil(SoilFormBean mSoilFormBean){
		StringBuilder sql=new StringBuilder();
		if(null!=mSoilFormBean){
			if(CommonUtil.trim(mSoilFormBean.getSearchName()).length()>0){
				sql.append("AND ((soil.STCD LIKE '%"+CommonUtil.trim(mSoilFormBean.getSearchName())+"%') ");
				sql.append("OR (TM LIKE '%"+CommonUtil.trim(mSoilFormBean.getSearchName())+"%') ");
				sql.append("OR (soil.VTAVSLM LIKE '%"+CommonUtil.trim(mSoilFormBean.getSearchName())+"%') ");
				sql.append("OR (soil.CRPTY LIKE '%"+CommonUtil.trim(mSoilFormBean.getSearchName())+"%') ");
				sql.append("OR (soil.SLTP  LIKE '%"+CommonUtil.trim(mSoilFormBean.getSearchName())+"%') ");
				sql.append("OR (soil.DRSLD LIKE '%"+CommonUtil.trim(mSoilFormBean.getSearchName())+"%') ");
				sql.append("OR (soil.SLMMMT LIKE '%"+CommonUtil.trim(mSoilFormBean.getSearchName())+"%') ");
				sql.append("OR (STNM LIKE '%"+CommonUtil.trim(mSoilFormBean.getSearchName())+"%')) ");
			}
			if(null!=mSoilFormBean.getmSoilInfoBean()){
				if(CommonUtil.trim(mSoilFormBean.getmSoilInfoBean().getStcd()).length()>0){
					sql.append(" AND soil.STCD = '"+CommonUtil.trim(mSoilFormBean.getmSoilInfoBean().getStcd())+"'");
				}
				if(CommonUtil.trim(mSoilFormBean.getmSoilInfoBean().getTm()).length()>0){
					sql.append(" AND soil.TM = '"+CommonUtil.trim(mSoilFormBean.getmSoilInfoBean().getTm())+"'");
				}
				if(CommonUtil.trim(mSoilFormBean.getmSoilInfoBean().getCrpty()).length()>0){
					sql.append(" AND soil.CRPTY = '"+CommonUtil.trim(mSoilFormBean.getmSoilInfoBean().getCrpty())+"'");
				}
				if(CommonUtil.trim(mSoilFormBean.getmSoilInfoBean().getSltp()).length()>0){
					sql.append(" AND soil.SLTP = '"+CommonUtil.trim(mSoilFormBean.getmSoilInfoBean().getSltp())+"'");
				}
				if(CommonUtil.trim(mSoilFormBean.getmSoilInfoBean().getSlmmmt()).length()>0){
					sql.append(" AND soil.SLMMMT = '"+CommonUtil.trim(mSoilFormBean.getmSoilInfoBean().getSlmmmt())+"'");
				}
			}
		}
		return sql.toString();
	}
	
	/**
	 * 执行新增语句
	 * */
	private String execQL(Soil mSoil){
		String EXKEY=Randomizer.nextLowerString(1);
		StringBuilder sql=new StringBuilder();
		sql.append("INSERT INTO ST_SOIL_R (STCD,TM,EXKEY,VTAVSLM,SRLSLM,SLM10,SLM20,SLM30,SLM40,SLM50,");
		sql.append("SLM60,CRPTY,CRPGRWPRD,HITRSN,HITEXT,SLTP,SLPQ,DRSLD,IRRINTV,PINTV,SLMMMT) ");
		sql.append("VALUES ('"+CommonUtil.trim(mSoil.getStcd())+"','"+DateUtil.ConvertTimestamp(mSoil.getTm())+"',");
		sql.append("'"+CommonUtil.trim(EXKEY)+"','"+CommonUtil.trim(mSoil.getVtavslm())+"',");
		sql.append("'"+CommonUtil.trim(mSoil.getSrlslm())+"','"+CommonUtil.trim(mSoil.getSlm10())+"',");
		sql.append("'"+CommonUtil.trim(mSoil.getSlm20())+"','"+CommonUtil.trim(mSoil.getSlm30())+"',");
		sql.append("'"+CommonUtil.trim(mSoil.getSlm40())+"','"+CommonUtil.trim(mSoil.getSlm50())+"',");
		sql.append("'"+CommonUtil.trim(mSoil.getSlm60())+"','"+CommonUtil.trim(mSoil.getCrpty())+"',");
		sql.append( "'"+CommonUtil.trim(mSoil.getCrpgrwprd())+"','"+CommonUtil.trim(mSoil.getHitrsn())+"',");
		sql.append("'"+CommonUtil.trim(mSoil.getHitext())+"','"+CommonUtil.trim(mSoil.getSltp())+"',");
		sql.append("'"+CommonUtil.trim(mSoil.getSlpq())+"','"+CommonUtil.trim(mSoil.getDrsld())+"',");
		sql.append("'"+CommonUtil.trim(mSoil.getIrrintv())+"','"+CommonUtil.trim(mSoil.getPintv())+"',");
		sql.append("'"+CommonUtil.trim(mSoil.getSlmmmt())+"')");
		return sql.toString();
	}
	
	/**
	 * 根据ID执行查询语句
	 * */
	private String execById(SoilFormBean mSoilFormBean){
		StringBuilder sql=new StringBuilder();
		sql.append("SELECT STCD,TM,EXKEY,VTAVSLM,SRLSLM,SLM10,SLM20,SLM30,SLM40,SLM50,");
		sql.append("SLM60,CRPTY,CRPGRWPRD,HITRSN,HITEXT,SLTP,SLPQ,DRSLD,IRRINTV,PINTV,");
		sql.append("SLMMMT FROM ST_SOIL_R WHERE STCD='"+mSoilFormBean.getmSoilInfoBean().getStcd()+"' ");
		sql.append(" AND TM='"+mSoilFormBean.getmSoilInfoBean().getTm()+"' ");
		sql.append(" AND EXKEY='"+mSoilFormBean.getmSoilInfoBean().getExkey()+"'");
		return sql.toString();
	}
	
	/**
	 * 根据ID执行修改语句
	 * */
	private String updateById(Soil mSoil){
		StringBuilder sql=new StringBuilder();
		sql.append("UPDATE ST_SOIL_R SET STCD = '"+CommonUtil.trim(mSoil.getStcd())+"', TM = '"+CommonUtil.trim(mSoil.getTm())+"' , EXKEY = '"+CommonUtil.trim(mSoil.getExkey())+"', ");
		sql.append(" VTAVSLM = '"+CommonUtil.trim(mSoil.getVtavslm())+"', SRLSLM = '"+CommonUtil.trim(mSoil.getSrlslm())+"', SLM10 = '"+CommonUtil.trim(mSoil.getSlm10())+"',");
		sql.append(" SLM20 = '"+CommonUtil.trim(mSoil.getSlm20())+"' , SLM30 = '"+CommonUtil.trim(mSoil.getSlm30())+"', ");
		sql.append(" SLM40 = '"+CommonUtil.trim(mSoil.getSlm40())+"', SLM50 = '"+CommonUtil.trim(mSoil.getSlm50())+"', ");
		sql.append(" SLM60 = '"+CommonUtil.trim(mSoil.getSlm60())+"', CRPTY = '"+CommonUtil.trim(mSoil.getCrpty())+"',");
		sql.append(" CRPGRWPRD = '"+CommonUtil.trim(mSoil.getCrpgrwprd())+"', HITRSN = '"+CommonUtil.trim(mSoil.getHitrsn())+"', ");
		sql.append(" HITEXT = '"+CommonUtil.trim(mSoil.getHitext())+"', SLTP = '"+CommonUtil.trim(mSoil.getSltp())+"', ");
		sql.append(" SLPQ = '"+CommonUtil.trim(mSoil.getSlpq())+"', DRSLD = '"+CommonUtil.trim(mSoil.getDrsld())+"',");
		sql.append(" IRRINTV = '"+CommonUtil.trim(mSoil.getIrrintv())+"', PINTV = '"+CommonUtil.trim(mSoil.getPintv())+"', ");
		sql.append(" SLMMMT = '"+CommonUtil.trim(mSoil.getSlmmmt())+"' WHERE STCD = '"+CommonUtil.trim(mSoil.getStcd())+"' ");
		sql.append(" AND TM='"+CommonUtil.trim(mSoil.getTm())+"' AND EXKEY='"+CommonUtil.trim(mSoil.getExkey())+"' ");
		return sql.toString();
	}
}
